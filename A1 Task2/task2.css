@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Teko:wght@300..700&display=swap');
/* the html and body's margin and padding are zero as it helps the nav bar hug the window edges*/
html, body{ 
    margin:0;
    padding:0;
    background-color: #eef36a;
    justify-items: center;
}

nav{ 
    display: grid;
    background-color: #4DCCBD;
    align-items: center;
    width:100vw; /* extend from edge to edge of the screen */
    grid-template-columns: 1fr 5fr 1fr; /* the middle one (genres) have a higher fr to make the name and the button squeeze to the sides */
    justify-items: center; /* centralizes every grid in nav */ 
    font-family: "Teko", sans-serif;
    box-shadow:0px 16px #231651;
    padding:16px;
}

h1, ul{ /* they automatically have their own paddings and margins */
    margin:0; /* setting them on zero will fix the spacing and even it out*/
    padding:0;
}

h1{ /* only the left side needs a margin */
    font-size: 3em;
    margin-left: 16px; /* if all sides had a margin, it would ruin the spacing of the whole nav bar*/
}

ul{ /* normally lists have a vertical orientation */
    display: flex; /* with flex on, they can be transformed horizontally*/
    list-style-type: none; /* removes the list bullets */
    gap:48px; /* space between list items */
    font-size:1.5em;
}

button{ /* this affects ALL buttons */
    font-family: "Teko", sans-serif;
    text-align: center; /* helps the texts centralize themselves on its cross axis */
    font-size: 2em;
    border-radius: 16px;
    border: none; /* gives buttons a more sleek look */
}

#search{
    height:60px;
    line-height:60px; /* setting the line height (for text) the same as its height helps centralize, when I set the height for this button, the text won't fix to the center even with text-align/align-items */
    min-width:150px; /* set a minimum size for the button when the screen changes devices */
    margin-right:16px; /* similar to the header 1, however just on the left side to keep them from touching the edge of the window */
    background-color: #ffffff;  
}

.main{ /* In my opinion, grid is the best way to position the way it was in the wireframes */
    display: grid; 
    margin:48px;
    max-width:900px; /* max width so it won't enlarge further */
    height: auto;
    grid-template-columns: 450px 450px; /* 2x5 grid */
    grid-template-rows: 500px 800px repeat(3, 500px); /* first two rows has a different sizes because they had a very different orientation/position from the rest of the containers */
    justify-content: center;
    gap:48px; /* space between containers */
    font-size: 1.5em;
    font-family: "Lato", sans-serif;
    line-height: 30px;
}

.container1{ /* first container is the most wide, it covers 3 column lines */
    width:100%; /* has the same width as the main container */
    grid-column: 1/3;
    grid-row: 1/2;
}

#img1{
    width:100%;
    height:300px;
    object-fit: cover; /* this lets the image crop itself according to its width and height */
}

.content1{ /* this is why it is easier to contain text and button in its own class*/
    display:flex; /* this doesnt affect the image, only text and button */
    gap:16px;
}

#txt1{
    width:70%;
    margin:0;
}

#b1{
    line-height: 35px;
    height:150px;
    width:30%;
}

.container2{
    grid-column: 1/2;
    grid-row: 2/3;
}

.container3{
    grid-column: 2/3;
    grid-row:2/3;
}

#img2,#img3{width:100%;} /* maximum width to their respective grid lines */

.content2, .content3{ /* content 2&3 basically has the same layout */
    display: grid; /* i went back and forth to using block and grid */
    grid-template-columns: 1fr; /* i eventually went with 1x2 */
    grid-template-rows: 5fr 1fr; /* It is much easier for me to space with grid, with block, they only match */
    margin:0;
    height:300px;
}

#txt2, #txt3{
    margin: 0;
    grid-column: 1/2;
    grid-row: 1/2;
}

#b2, #b3{
    grid-column: 1/2;
    grid-row: 2/3;
}

#img1, #img2, #img3 {border-radius: 16px 16px 0px 0px;}
#b2, #b3, #b4, #b5, #b6{width:100%;}

.container4, .container5, .container6{
    display: flex; /* image and content are flex to horizontally align them */
    grid-column:1/3;
}

.container4{grid-row: 3/4;}
.container5{grid-row: 4/5;}
.container6{grid-row: 5/6;}

#img4, #img5, #img6{
    width:50%;
    border-radius: 16px 0px 0px 16px;
}

.content4, .content5, .content6{                                   
    display:grid; /* 5fr gives more space for the text and pushes the buttons to the bottom */
    grid-template-columns: 1fr;
    grid-template-rows: 5fr 1fr;
}

#txt4, #txt5, #txt6{
    width:100%;
    margin-top: 0;
    margin-bottom: 0;
    grid-column: 1/2;
    grid-row: 1/2;
}

#b4, #b5, #b6{
    grid-column:1/2;
    grid-row:2/3;
}

#b1, #b2, #b3, #b4, #b5, #b6{
    background-color: #4DCCBD;  
    box-shadow:4px 4px #231651;
}

.content1, .content2, .content3, .content4, .content5, .content6{margin:16px;}

.container1, .container2, .container3, .container4, .container5, .container6{
    box-shadow: 16px 16px #231651c0;
    background-color: #ffffff;
    border-radius: 16px;
}



/**Tablet**/
@media (max-width:1024px){ /* most change in the tablet was the position of the first 3 containers */

    h1, #search{min-width:150px;}
    ul{gap:20px;} /* decrease the gap between the list items */

    .main{
        width: 80vw; /* 80%  */
        display:grid; /* 2x3 grid */
        grid-template-columns: repeat(2, 300px); 
        grid-template-rows: repeat(3, 900px);
        justify-content: center;
        gap:32px;
    }

    button{width: 100%;}
    .container1, .container3, .container5{grid-column: 1/2;}
    .container2, .container4, .container6{grid-column: 2/3;}
    .container1, .container2{grid-row: 1/2;}
    .container3, .container4{grid-row: 2/3;}
    .container5, .container6{grid-row: 3/4;}

    .container1, .container2, .container3, .container4, .container5, .container6{
        display: block; /* puts elements into vertical orientation */
        width: 300px;
        height: 900px;  
        border-radius: 16px;
    }

    .content1, .content2, .content3, .content4, .content5, .content6{
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 9fr 2fr;
        width:90%;
        height:550px;
        padding:0;
    }

    #txt1, #b1{
        width:100%;
        height:auto;
        br{display:none;} /* removes the line break in the html */
    }

    #txt1, #txt2, #txt3, #txt4, #txt5, #txt6{grid-row: 1/2;}
    #b1, #b2, #b3, #b4, #b5, #b6{grid-row: 2/3;}        

    #img4, #img5, #img6{
        width:100%;
        height:auto;
        border-radius: 16px 16px 0px 0px;
    }
}


/**phone**/
@media (max-width:720px){ /* most change in this part is the grid of the elements into a single column */

    ul{display:none;} /* completely removes the genres in the middle */
    img{border-radius: 0;}
    nav{
        width:100%;
        grid-template-columns: repeat(2, 1fr);
    }

    h1{
        grid-column: 1/2;
        justify-self: start; /* sticks to the left side */
    }

    #search{
        grid-column: 2/3;
        justify-self: end; /* sticks to the right side*/
        max-width: 150px;
    }

    .main{
        justify-self: center;
        width:100%;
        grid-template-columns: 1fr; /* rooted from the last grid */
        grid-template-rows: repeat(6, 1fr);
        justify-items: center;
    }

    .container1{grid-row: 1/2}
    .container2{grid-row: 2/3}
    .container3{grid-row: 3/4}
    .container4{grid-row: 4/5}
    .container5{grid-row: 5/6}
    .container6{grid-row: 6/7}

    .container1, .container2, .container3, .container4, .container5, .container6{
        grid-column: 1/2;
        box-shadow:0px 16px #231651c0;
        width:100%;
        height: auto;
    }

    .content1, .content2, .content3, .content4, .content5, .content6{
        width: 90%;
        justify-self: center;
        margin:16px;
    }

    #txt1, #txt2, #txt3, #txt4, #txt5, #txt6{line-height: 50px;}

    #img1{
        display:block;
        width:100%;
        object-fit: contain; /* returns the image into normal condition (without crop) */
        height:auto;
    }
}